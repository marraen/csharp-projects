//theory


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace _8_week
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<int, int> dic = new Dictionary<int, int>();
            dic[10] = 5;
            dic[8] = 2;

            foreach (int a in dic.Values)
            {
                Console.WriteLine(a);
            }
            
            SortedDictionary<int, int> sDic = new SortedDictionary<int, int>();
            sDic[10] = 5;
            sDic[8] = 2;

            foreach (int a in sDic.Values)
            {
                Console.WriteLine(a);
            }

            List<int> mujList = new List<int>();
            mujList.Add(5);
            mujList.Add(7);
            mujList.Add(9);

            Console.WriteLine(mujList.IndexOf(7));
            //mujList.

            string soubor = @"d:\mujSoubor.txt";
            StreamWriter writer = File.CreateText(soubor);
            foreach (int a in sDic.Values)
            {
                writer.WriteLine(a);
            }
            writer.Close();

            if (File.Exists(soubor))
            {
                StreamReader reader = File.OpenText(soubor);
                string radek = null;
                while((radek = reader.ReadLine()) != null)
                {
                    Console.WriteLine(radek);
                }
            }
            Console.ReadLine();

        }
    }
}



// exercise

// class RocniTeplota
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _8_week
{
    class RocniTeplota
    {
        public List<double> MesicniTeploty { get; set; }
        public int rok {get; set;}
        
        public double MaxTeplota
        {
            get 
            {
                return MesicniTeploty.Max();
            }
        }
        
        public double MinTeplota
        {
            get
            {
                return MesicniTeploty.Min();
            }
        }

        public double PrumernaTeplota
        {
            get
            {
                return MesicniTeploty.Average();            
            }
        }



        /*
        private int rok;
        private double[] mesicniTeploty;

        public void getRok(int Rok)
        {
            rok = Rok;
        }
        public void getMesicniTeploty(double[] MesicniTeploty)
        {
            mesicniTeploty = MesicniTeploty;
        }


        

        protected double MaxTeplota(double teplota)
        {
            double maxTeplota

            if (teplota > maxTeplota)
            {
                maxTeplota = teplota;
            }
            return maxTeplota;
        }

        protected double MinTeplota(double teplota)
        {
            double minTeplota = 0;

            if (teplota > minTeplota)
            {
                minTeplota = teplota;
            }
            return minTeplota;
        }

        protected double PrumerTeplota(double teplota)
        {
            double prumerTeplota = 0;

            if (teplota > prumerTeplota)
            {
                prumerTeplota = teplota;
            }
            return prumerTeplota;
        }
         */ 
    }
}



//Programm
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace _8_week
{
    class Program
    {
        static void Main(string[] args)
        {
            RocniTeplota rok1 = new RocniTeplota();

            rok1.MesicniTeploty = new List<double> { 15, 16, 19.5, 32, 25, 22.7 };
            rok1.rok = 1990;

            Console.WriteLine("Maximalni teplota za evidovane roky byla: " + rok1.MaxTeplota);
            Console.WriteLine("Prumerna teplota za evidovane roky byla: " + rok1.PrumernaTeplota);
            Console.WriteLine("Minimalni teplota za evidovane roky byla: " + rok1.MinTeplota);
            Console.WriteLine("------------------------");

            ArchivTeplot zapis = new ArchivTeplot();
            zapis.Write();

            

            /*
            RocniTeplota temp = new RocniTeplota();
            temp.getRok(2000);
            temp.getMesicniTeploty(20, 10);
            */

            Console.ReadLine();

        }
    }
}



// classa ArchivTeplot

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace _8_week
{
    class ArchivTeplot
    {

        SortedDictionary<int, RocniTeplota> _archiv = new SortedDictionary<int, RocniTeplota>();



        public void Load(string _jmenoSouboru)
        {
            _archiv.Clear();
            StreamReader reader = File.OpenText(_jmenoSouboru);
            string radek = null;

            while ((radek = reader.ReadLine()) != null)
            {
                string [] sep1 = radek.Split(':');
                if (sep1.Length == 2)
                {
                    RocniTeplota novyRok = new RocniTeplota();
                    novyRok.rok = Convert.ToInt32(sep1[0]);
                    string [] sep2 = sep1[1].Split(new char[]{';'}, StringSplitOptions.RemoveEmptyEntries);
                    if (sep2.Length == 12)
                    {
                        List<double> mesTep1 = new List<double>();
                        foreach (string c in sep2)
                        {
                            mesTep1.Add(Convert.ToDouble(c));
                        }

                        novyRok.MesicniTeploty = mesTep1;
                        _archiv[novyRok.rok] = novyRok;
                    }
                }
            }
            reader.Close();
        }

        public void Write()
        {
            string radek = "2011: 25; 36; 21; 12; 12.6; 30; 26.5; 18,9; 12,3; 20; 19.2; 18.2";
            Console.WriteLine(radek);

            string[] teploty = radek.Split(new char[] { ';' }, StringSplitOptions.RemoveEmptyEntries);
            Console.WriteLine(teploty);

            string _jmenoSouboru = @"d:\ArchivTeplot.txt";
            StreamWriter writer = File.CreateText(_jmenoSouboru);
            
            foreach (RocniTeplota a in _archiv.Values)
            {
                writer.WriteLine(radek);
            }
            writer.Close();

        }
    }
}
